{"version":3,"sources":["components/MatchDetailCard.tsx","components/MatchSmallCard.tsx","page/TeamPage.tsx","components/YearSelector.tsx","page/MatchPage.tsx","components/TeamComponent.tsx","components/Footer.tsx","page/HomePage.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["MatchDetailCard","props","isWinner","teamName","matchData","matchWinner","vsTeam","team1","team2","className","to","date","venue","city","resultMargin","resultBy","playerOfMatch","umpire1","id","umpire2","MatchSmallCard","TeamPage","useState","loading","setLoading","params","useParams","responseRef","useRef","endYear","parseInt","process","useEffect","fetch","then","res","json","console","log","current","catch","err","data","title","value","totalWins","color","totalMatches","style","textAlign","fontWeight","matches","arr","i","length","push","matchesView","YearSelector","years","startYear","paramYear","MatchPage","apiState","setApiState","year","response","error","JSON","stringify","TeamComponent","info","src","alt","height","Footer","HomePage","flexDirection","display","marginBottom","fontSize","marginTop","marginLeft","teamsView","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b17136d4.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport \"./matchDetailCard.scss\"\n\ninterface MatchDetailCardProps {\n    matchData: MatchData\n    teamName: string\n}\n\ninterface MatchData {\n    team1: string,\n    team2: string,\n    city: string,\n    date: string,\n    matchWinner: string,\n    resultMargin: string\n    resultBy: string\n    venue: string\n    playerOfMatch: string\n    umpire1: string,\n    umpire2: string\n}\n\n\nexport const MatchDetailCard = (props: MatchDetailCardProps) => {\n\n    let isWinner = props.teamName === props.matchData.matchWinner\n\n    let vsTeam = props.teamName === props.matchData.team1 ? props.matchData.team2 : props.matchData.team1\n\n    return <div className={isWinner ? \"MatchDetailCard won-style\" : \"MatchDetailCard lost-style\"}>\n        <div>\n            <h3 className={\"latest-match\"}>Latest Match</h3>\n            <span className={\"vs\"}>Vs: </span> <h2><Link to={\"/teams/\" + vsTeam}>{vsTeam}</Link></h2>\n            <span>On: </span><h2 className={\"match-date\"}>{props.matchData.date}</h2>\n            <span>Happened at: </span><h3 className={\"match-venue\"}>{props.matchData.venue} {props.matchData.city}</h3>\n            <span>{isWinner ? \"won\" : \"lost\"} by: </span><h3\n            className={\"match-result\"}>{props.matchData.resultMargin} {props.matchData.resultBy}.\n        </h3></div>\n        <div className={\"innings\"}>\n            <p className={\"p-innings\"}>First Innings:</p>\n            <h3 className={\"h1-innings\"}>{props.matchData.team1}</h3>\n            <p className={\"p-innings\"}>Second Innings:</p>\n            <h3 className={\"h1-innings\"}>{props.matchData.team2}</h3>\n            <p className={\"p-innings\"}>Man of the Match:</p>\n            <h3 className={\"h1-innings\"}>{props.matchData.playerOfMatch}</h3>\n            <p className={\"p-innings\"}>Umpires:</p>\n            <h3 className={\"h1-innings\"}>{props.matchData.umpire1} <br/> <span\n                id={\"spn-and\"}>and</span> {props.matchData.umpire2}</h3>\n\n        </div>\n\n    </div>\n}\n","import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nimport './matchSmallCard.scss'\n\ninterface MatchSmallCardProps {\n    matchData: MatchData\n    teamName: string\n}\n\ninterface MatchData {\n    team1: string,\n    team2: string,\n    city: string,\n    date: string,\n    matchWinner: string,\n    resultMargin: string\n    resultBy: string\n    venue: string\n}\n\nexport const MatchSmallCard = (props: MatchSmallCardProps) => {\n\n    let vsTeam = props.teamName === props.matchData.team1 ? props.matchData.team2 : props.matchData.team1\n\n    let isWinner = props.teamName === props.matchData.matchWinner\n\n    return <div className={isWinner ? \"MatchSmallCard won-style\" : \"MatchSmallCard lost-style\"}>\n        {<p><b>Vs: <Link to={\"/teams/\"+vsTeam}>{vsTeam}</Link></b></p>}\n        <p>{props.matchData.matchWinner} won by {props.matchData.resultMargin} {props.matchData.resultBy}.\n        </p>\n    </div>\n}\n","import React, {useEffect, useRef, useState} from 'react'\nimport {MatchDetailCard} from \"../components/MatchDetailCard\";\nimport {MatchSmallCard} from \"../components/MatchSmallCard\";\nimport './teamPage.scss'\nimport {Link, useParams} from \"react-router-dom\";\nimport {PieChart} from 'react-minimal-pie-chart';\n\ninterface TeamPageProps {\n\n}\n\ninterface Params {\n    teamName: string\n}\n\nexport const TeamPage = (props: TeamPageProps) => {\n\n    const [loading, setLoading] = useState(true)\n\n    const params = useParams() as Params\n\n    const responseRef = useRef<null | any>()\n\n    const endYear: number = parseInt(process.env.REACT_APP_DATA_END_YEAR ?? \"0\")\n\n\n    useEffect(() => {\n\n        setLoading(true)\n\n        fetch(\"/team/\" + params?.teamName ?? \"\").then((res) => {\n            return res.json()\n        }).then((res) => {\n            console.log(res)\n            responseRef.current = res\n            setLoading(false)\n        }).catch((err) => {\n            setLoading(false)\n        })\n    }, [params?.teamName])\n\n    const matchesView = () => {\n        const arr: any[] = []\n        if (responseRef.current) {\n            for (let i = 1; i < responseRef.current.matches.length; i++) {\n                arr.push(<MatchSmallCard matchData={responseRef.current.matches[i]} teamName={params.teamName}\n                                         key={i + \"\"}/>)\n            }\n        }\n        return arr\n    }\n    if (!responseRef.current || !responseRef.current.teamName) {\n        return <div>Error Bro!! Please Enter Correct Team Name</div>\n    }\n\n    const data = [\n        {title: 'Wins', value: responseRef.current.totalWins, color: '#38ada9'},\n        {title: 'Losses', value: responseRef.current.totalMatches - responseRef.current.totalWins, color: '#e55039'}\n    ]\n\n    return <div className=\"TeamPage\">\n        <div className={\"team-name\"}>\n            <h1 className={\"team-name-h1\"}>{loading ? \"Loading...\" : (responseRef.current.teamName || \"\")}</h1>\n        </div>\n        <div className={\"wins-loss\"}>\n            <p style={{\n                textAlign: \"center\",\n                fontWeight: 500,\n            }}>Wins/Losses</p>\n            <PieChart data={data} className={\"pie-chart\"}/>\n        </div>\n        <div className={\"detail-card\"}>\n            <MatchDetailCard matchData={responseRef.current.matches[0]} teamName={params.teamName}/>\n        </div>\n        <div className={\"old-matches\"}><h3> Old Matches</h3></div>\n        {matchesView()}\n        <div className={\"div-next\"}>\n            <Link to={\"/teams/\" + params.teamName + \"/matches/\" + endYear}>More Matches &gt;</Link>\n        </div>\n    </div>\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport './yearSelector.scss'\n\ninterface YearSelectorProps {\n    teamName?: string,\n    paramYear?: number\n}\n\nexport const YearSelector = (props: YearSelectorProps) => {\n\n    let years = []\n    let startYear: number = parseInt(process.env.REACT_APP_DATA_START_YEAR ?? \"0\")\n    let endYear: number = parseInt(process.env.REACT_APP_DATA_END_YEAR ?? \"0\")\n\n\n    //console.log(startYear, endYear, process.env.REACT_APP_DATA_START_YEAR, process.env.REACT_APP_DATA_END_YEAR)\n    for (let i: number = endYear; i >= (startYear); i--) {\n        if (parseInt(props.paramYear + \"\") === i) {\n            years.push(<li className={\"year-name selected\"} key={i}>\n                <Link to={\"/teams/\" + props.teamName + \"/matches/\" + i}>{i}</Link>\n            </li>)\n        } else {\n            years.push(<li className={\"year-name\"} key={i}>\n                <Link to={\"/teams/\" + props.teamName + \"/matches/\" + i}>{i}</Link>\n            </li>)\n        }\n\n    }\n\n    return <div className={\"year-container\"}>\n        <h3>Select Year</h3>\n        <ul>\n            {years}\n        </ul>\n    </div>\n\n\n}\n","import React, {useEffect, useState} from 'react'\nimport {useParams} from \"react-router-dom\";\nimport {ApiState} from \"../common-types/types\";\nimport {MatchDetailCard} from \"../components/MatchDetailCard\";\n\nimport './matchPage.scss'\nimport {YearSelector} from \"../components/YearSelector\";\n\ninterface MatchPageProps {\n\n}\n\ninterface Params {\n    teamName?: string\n    year?: number\n}\n\nexport const MatchPage = (props: MatchPageProps) => {\n\n    const [apiState, setApiState] = useState<ApiState>({\n        loading: true,\n\n    })\n\n    const params = useParams() as Params\n\n    useEffect(() => {\n\n        setApiState({loading: true})\n\n        fetch(\"/team/\" + (params?.teamName ?? \"\") + \"/matches?year=\" + params.year).then((res) => {\n            return res.json()\n        }).then((res) => {\n            console.log(res)\n            setApiState({loading: false, response: res})\n        }).catch((err) => {\n            setApiState({loading: false, error: err})\n        })\n    }, [params])\n\n    const matchesView = () => {\n        const arr: any[] = []\n        if (apiState.response) {\n            for (let i = 1; i < apiState.response.data.length; i++) {\n                arr.push(<div className={\"space\"}/>)\n                arr.push(<MatchDetailCard matchData={apiState.response.data[i]} teamName={params.teamName ?? \"\"}\n                                          key={i + \"\"}/>)\n            }\n        }\n        return arr\n    }\n\n    if (apiState.loading) {\n        return (<div className=\"MatchPage\">\n            <h1>Loading...</h1>\n        </div>)\n    } else if (apiState.response) {\n\n        return (<div className=\"MatchPage\">\n            <div className={\"year-selector\"}>\n                <YearSelector teamName={params.teamName} paramYear={params.year}/>\n            </div>\n            <div>\n                <h1>{params.teamName} Matches of year {params.year}</h1>\n                {matchesView()}\n            </div>\n        </div>)\n    } else {\n        return (<div className=\"MatchPage\">\n            <h1>Match Page</h1>\n            <pre>{JSON.stringify(apiState.error)}</pre>\n        </div>)\n    }\n\n\n}\n","import React from 'react'\nimport \"./teamComponent.scss\"\nimport {Link} from \"react-router-dom\";\n\ninterface TeamComponentProps {\n    info: TeamInfo\n}\n\ninterface TeamInfo {\n    id: number\n    teamName: string,\n    totalMatches: number,\n    totalWins: number\n}\n\nexport const TeamComponent = (props: TeamComponentProps) => {\n    return <div className={\"team-component\"}>\n        <Link to={\"/teams/\" + props.info.teamName}>\n            <img src={\"./img/team-logo/\" + props.info.id + \".png\"} alt={props.info.teamName} style={{\n                height: \"120px\"\n            }}/>\n            <p>{props.info.teamName}</p></Link>\n    </div>\n}","import React from \"react\";\n\nimport \"./footer.scss\"\n\nexport const Footer = () => {\n    return <div className={\"footer\"}>\n        ⓒ&nbsp;2021 Mudit Inc. All rights reserved, Built with <span className=\"fm77HeartImg\"> ♥ </span>in India\n    </div>\n}","import React, {useEffect, useState} from 'react'\nimport {ApiState} from \"../common-types/types\";\nimport './homePage.scss'\nimport {TeamComponent} from \"../components/TeamComponent\";\nimport {Footer} from \"../components/Footer\";\n\n\ninterface HomePageProps {\n\n}\n\nexport const HomePage = (props: HomePageProps) => {\n\n    const [apiState, setApiState] = useState<ApiState>({\n        loading: true,\n    })\n\n    useEffect(() => {\n\n        setApiState({loading: true})\n\n        fetch(\"/teams/\").then((res) => {\n            return res.json()\n        }).then((res) => {\n            console.log(res)\n            setApiState({loading: false, response: res})\n        }).catch((err) => {\n            setApiState({loading: false, error: err})\n        })\n    }, [])\n\n    const teamsView = () => {\n        const arr: any[] = []\n        if (apiState.response) {\n            for (let i = 0; i < apiState.response.data.length; i++) {\n                arr.push(<TeamComponent key={i + \"\"} info={apiState.response.data[i]}/>)\n            }\n        }\n        return arr\n    }\n\n    if (apiState.loading) {\n        return (<div className=\"HomePage\">\n            <h1>IPL DashBoard</h1>\n            <h2>Loading...</h2>\n        </div>)\n    } else if (apiState.response) {\n        return (<div className=\"HomePage\">\n            <div style={{\n                flexDirection: \"row\",\n                display: \"flex\",\n            }}>\n                <img src={process.env.PUBLIC_URL + '/ipl-logo.png'} alt=\"logo\" style={{\n                    height: \"7.2rem\",\n                    marginBottom: \"10px\"\n                }}/>\n                <h1 className={\"appName\"} style={{\n                    fontSize: \"70px\",\n                    marginTop: \"50px\",\n                    marginLeft: \"8px\",\n                    color: \"#ffffff\",\n                    fontWeight: 600,\n                }}> DashBoard <span className={\"byMudit\"}>By Mudit</span></h1>\n\n            </div>\n            <p style={{\n                marginTop: \"1rem\",\n                marginBottom: \"1rem\",\n                fontSize: \"14px\",\n                color: \"white\",\n            }}>The Indian Premier League (IPL) is a professional Twenty20 cricket league, contested by eight teams based\n                out of eight different Indian cities. The league was founded by the Board of Control for Cricket in\n                India (BCCI) in 2007. It is usually held between March and May of every year and has an exclusive window\n                in the ICC Future Tours Programme.</p>\n            <div className={\"team-grid\"}>\n                {teamsView()}\n            </div>\n\n            <Footer/>\n\n\n        </div>)\n    } else {\n        return (<div className=\"HomePage\">\n            <h1>IPL DashBoard</h1>\n            <pre>{JSON.stringify(apiState.error)}</pre>\n        </div>)\n    }\n}\n\n\n\n","import './App.scss';\nimport {TeamPage} from \"./page/TeamPage\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {MatchPage} from \"./page/MatchPage\";\nimport {HomePage} from \"./page/HomePage\";\n\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path={\"/teams/:teamName/matches/:year\"}>\n                    <MatchPage/>\n                </Route>\n\n                <Route path={\"/teams/:teamName\"}>\n                    <TeamPage/>\n                </Route>\n\n                <Route path={\"/\"}>\n                    <HomePage/>\n                </Route>\n\n            </Switch>\n        </Router>\n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}